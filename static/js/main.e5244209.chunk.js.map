{"version":3,"sources":["components/GameMiniature.js","pages/Category.js","components/TopBar.js","components/GameOptions.js","pages/ErrorPage.js","components/App.js","index.js"],"names":["GameMiniature","_ref","img","name","showOptions","game","_jsxs","className","onClick","children","_jsx","style","backgroundImage","concat","Category","games","props","sort","a","b","classifyGames","category","match","params","filter","list","map","background_image","id","_Fragment","TopBar","value","search","isNavActive","handleNav","scrollDirection","invisible","type","onChange","placeholder","buttons","activeClass","unActiveClass","GameOptions","_Component","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","state","valueOfMove","handleChangeStatus","actualGame","setState","handleMoveImg","prevState","_createClass","key","_this2","this","_this3","_this$props","isOptionsVisible","closeOptions","_this$state","imgs","short_screenshots","screen","image","transform","buttonsList","button","released","rating","playtime","metacritic","Component","ErrorPage","path","App","classesNav","searchedGames","isLoaded","error","handleSearch","e","searchValue","target","toUpperCase","includes","handleOptions","window","innerWidth","push","startScroll","addEventListener","document","documentElement","scrollTop","promises","i","Promise","all","promise","fetch","then","response","json","jsonData","results","catch","err","classNameNav","join","Boolean","menu","item","NavLink","to","BrowserRouter","basename","process","Switch","Route","component","render","ReactDOM","React","StrictMode","getElementById"],"mappings":"qRASeA,EATO,SAAHC,GAAwC,IAAnCC,EAAGD,EAAHC,IAAKC,EAAIF,EAAJE,KAAMC,EAAWH,EAAXG,YAAaC,EAAIJ,EAAJI,KAC5C,OACIC,eAAA,OAAKC,UAAU,OAAOC,QAAS,kBAAMJ,EAAYC,EAAK,EAACI,SAAA,CACnDC,cAAA,OAAKH,UAAU,YAAYI,MAAO,CAACC,gBAAgB,OAADC,OAASX,EAAG,QAC9DQ,cAAA,KAAGH,UAAU,cAAaE,SAAEN,MAGxC,ECgBeW,EArBE,SAAHb,GAAqC,IAAhCc,EAAKd,EAALc,MAAOX,EAAWH,EAAXG,YAAaY,EAAKf,EAALe,MACnCD,EAAME,MAAK,SAACC,EAAGC,GACX,OAAID,EAAEf,KAAOgB,EAAEhB,MAAc,EACzBe,EAAEf,KAAOgB,EAAEhB,KAAa,EACrB,CACX,IAEA,IAAIiB,EAAgBL,EACdM,EAAWL,EAAMM,MAAMC,OAAOF,SAEhCA,IAAUD,EAAgBL,EAAMS,QAAO,SAAAnB,GAAI,OAAIA,EAAKgB,EAAS,KAEjE,IAAMI,EAAOL,EAAcM,KAAI,SAAArB,GAAI,OAAIK,cAACV,EAAa,CAAeE,IAAKG,EAAKsB,iBAAkBxB,KAAME,EAAKF,KAAMC,YAAaA,EAAaC,KAAMA,GAAtFA,EAAKuB,GAAwF,IAExJ,OACIlB,cAAAmB,WAAA,CAAApB,SACCgB,GAGT,ECJeK,G,MAfA,SAAH7B,GAAkE,IAA7D8B,EAAK9B,EAAL8B,MAAOC,EAAM/B,EAAN+B,OAAQC,EAAWhC,EAAXgC,YAAaC,EAASjC,EAATiC,UAAWC,EAAelC,EAAfkC,gBAChDC,EAAY,GAKhB,MAJwB,SAApBD,EAA4BC,EAAY,YACf,OAApBD,IAA0BC,EAAY,IAI3C9B,eAAA,OAAKC,UAAS,OAAAM,OAASuB,GAAazB,MAAOsB,EAAc,CAACT,OAAQ,aAAe,KAAKf,SAAA,CAClFC,cAAA,SAAO2B,KAAK,OAAON,MAAOA,EAAOO,SAAUN,EAAQzB,UAAU,cAAcgC,YAAY,cACvF7B,cAAA,OAAKH,UAAU,aAAYE,SAACC,cAAA,KAAGH,UAAU,oBACzCG,cAAA,UAAQF,QAAS0B,EAAW3B,UAAU,WAAUE,SAACC,cAAA,KAAGH,UAAU,oBAG1E,GCXMiC,G,MAAU,CACZ,CAACH,KAAM,YAAaI,YAAa,wBAAyBC,cAAe,gBACzE,CAACL,KAAM,SAAUI,YAAa,0BAA2BC,cAAe,kBACxE,CAACL,KAAM,SAAUI,YAAa,yBAA0BC,cAAe,mBAKrEC,EAAW,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAiCZ,OAjCYP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAjC,OAAAwC,KAEbK,MAAQ,CACJrD,KAAM,GACNsD,YAAa,GAChBX,EAUDY,mBAAqB,SAACC,EAAYxB,GAC9BwB,EAAWxB,IAASwB,EAAWxB,GAE/BW,EAAKc,UAAS,iBAAO,CACjBzD,KAAMwD,EACT,GACL,EAACb,EAEDe,cAAgB,SAAC1B,GACA,UAATA,GAAoBW,EAAKU,MAAMC,aAAe,IAC9CX,EAAKc,UAAS,SAACE,GAAS,MAAM,CAC1BL,YAAaK,EAAUL,YAAc,IACxC,IACe,SAATtB,GAAmBW,EAAKU,MAAMC,YAAc,GACnDX,EAAKc,UAAS,SAACE,GAAS,MAAM,CAC1BL,YAAaK,EAAUL,YAAc,IACxC,GAET,EAACX,CAAA,CA4CA,OA5CAiB,YAAAtB,EAAA,EAAAuB,IAAA,qBAAAnC,MA1BD,WAAsB,IAADoC,EAAA,KACbC,KAAKV,MAAMrD,OAAS+D,KAAKpD,MAAM6C,YACnCO,KAAKN,UAAS,iBAAO,CACjBzD,KAAM8D,EAAKnD,MAAM6C,WACjBF,YAAa,EAChB,GACL,GAAC,CAAAO,IAAA,SAAAnC,MAsBD,WAAU,IAADsC,EAAA,KACLC,EAAkEF,KAAKpD,MAAhEuD,EAAgBD,EAAhBC,iBAAkBV,EAAUS,EAAVT,WAAY5B,EAAWqC,EAAXrC,YAAauC,EAAYF,EAAZE,aAClDC,EAA4BL,KAAKV,MAA1BrD,EAAIoE,EAAJpE,KAAMsD,EAAWc,EAAXd,YAETe,EAAO,GAEPH,IACAG,EAAOb,EAAWc,kBAAkBjD,KAAI,SAAAkD,GAAM,OAC9ClE,cAAA,OACAH,UAAU,YACVI,MAAO,CAACC,gBAAgB,OAADC,OAAS+D,EAAOC,MAAK,KAAKC,UAAU,cAADjE,OAAgB8C,EAAW,QAChFiB,EAAOhD,GACN,KAIV,IAAMmD,EAAcvC,EAAQd,KAAI,SAAAsD,GAAM,OACtCtE,cAAA,UAA0BF,QAAS,kBAAM6D,EAAKT,mBAAmBC,EAAYmB,EAAO3C,KAAK,EAAC5B,SAACC,cAAA,KAAGH,UAAWF,EAAK2E,EAAO3C,MAAQ2C,EAAOvC,YAAcuC,EAAOtC,iBAA5IsC,EAAO3C,KAAiK,IAGzL,OACI/B,eAAA,OAAKC,UAAWgE,EAAmB,yBAA2B,UAAW5D,MAAOsB,EAAc,CAACT,OAAQ,aAAe,KAAKf,SAAA,CACvHH,eAAA,OAAKC,UAAU,OAAME,SAAA,CACjBC,cAAA,UAAQH,UAAU,mBAAmBC,QAAS,kBAAM6D,EAAKN,cAAc,QAAQ,EAACtD,SAACC,cAAA,KAAGH,UAAU,2BAC9FG,cAAA,UAAQH,UAAU,kBAAkBC,QAAS,kBAAM6D,EAAKN,cAAc,OAAO,EAACtD,SAACC,cAAA,KAAGH,UAAU,0BAC3FmE,KAELpE,eAAA,QAAMC,UAAU,gBAAeE,SAAA,CAC3BC,cAAA,MAAIH,UAAU,iBAAgBE,SAAEoD,EAAW1D,OAC3CO,cAAA,OAAKH,UAAWgE,EAAmB,sDAAwD,6BAA6B9D,SACnHsE,IAELzE,eAAA,MAAIC,UAAWgE,EAAmB,4BAA8B,gBAAgB9D,SAAA,CAC5EH,eAAA,MAAIC,UAAU,yBAAwBE,SAAA,CAACC,cAAA,QAAMH,UAAU,qBAAoBE,SAAC,aAAe,IAAEoD,EAAWoB,YACxG3E,eAAA,MAAIC,UAAU,yBAAwBE,SAAA,CAACC,cAAA,QAAMH,UAAU,qBAAoBE,SAAC,WAAa,IAAEoD,EAAWqB,OAAO,WAC7G5E,eAAA,MAAIC,UAAU,yBAAwBE,SAAA,CAACC,cAAA,QAAMH,UAAU,qBAAoBE,SAAC,aAAgBoD,EAAWsB,SAAS,OAChH7E,eAAA,MAAIC,UAAU,yBAAwBE,SAAA,CAACC,cAAA,QAAMH,UAAU,qBAAoBE,SAAC,eAAkBoD,EAAWuB,WAAU,GAAAvE,OAAMgD,EAAWuB,WAAU,QAAS,aAG/J1E,cAAA,UAAQH,UAAU,sBAAsBC,QAAS,kBAAMgE,GAAc,EAAC/D,SAACC,cAAA,KAAGH,UAAU,qBAG5F,KAACoC,CAAA,CA7EY,CAAS0C,aAgFX1C,ICtFA2C,EANG,WACd,OACI5E,cAAA,KAAGH,UAAU,QAAOE,SAAC,iCAE7B,ECIMgB,EAAO,CACX,CAAEG,GAAI,EAAGzB,KAAM,QAASoF,KAAM,KAC9B,CAAE3D,GAAI,EAAGzB,KAAM,YAAaoF,KAAM,cAClC,CAAE3D,GAAI,EAAGzB,KAAM,UAAWoF,KAAM,WAChC,CAAE3D,GAAI,EAAGzB,KAAM,SAAUoF,KAAM,YAG3BC,EAAG,SAAA5C,GAAAC,YAAA2C,EAAA5C,GAAA,IAAAE,EAAAC,YAAAyC,GAAA,SAAAA,IAAA,IAAAxC,EAAAC,YAAA,KAAAuC,GAAA,QAAAtC,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GA4GL,OA5GKP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAjC,OAAAwC,KACPK,MAAQ,CACN3B,MAAO,GACPI,gBAAiB,KACjBsD,WAAY,CAAC,OACb1E,MAAO,GACP2E,cAAe,GACf7B,WAAY,GACZU,kBAAkB,EAClBoB,UAAU,EACVC,MAAO,MACR5C,EAkDD6C,aAAe,SAACC,GACd,IAAMC,EAAcD,EAAEE,OAAOjE,MAEvB2D,EAAgB1C,EAAKU,MAAMgC,cAAclE,QAAO,SAACnB,GAAI,OACzDA,EAAKF,KAAK8F,cAAcC,SAASH,EAAYE,cAAc,IAG7DjD,EAAKc,UAAS,iBAAO,CACnB/B,MAAOgE,EACPhF,MAAO2E,EACR,GACH,EAAC1C,EAEDmD,cAAgB,SAAC9F,GACXA,EACF2C,EAAKc,UAAS,iBAAO,CACnBS,kBAAkB,EAClBV,WAAYxD,EACb,IAED2C,EAAKc,UAAS,iBAAO,CACnBS,kBAAkB,EAClBV,WAAY,GACb,GAEL,EAACb,EAEDd,UAAY,WACV,GAAIkE,OAAOC,WAAa,KAAM,CAC5B,IAAMZ,EAAazC,EAAKU,MAAM+B,WAEzBA,EAAWS,SAAS,cAMvBlD,EAAKc,UAAS,iBAAO,CACnB2B,WAAY,CAAC,OACblB,kBAAkB,EACnB,KARDkB,EAAWa,KAAK,cAChBtD,EAAKc,UAAS,iBAAO,CACnB2B,aACD,IAOL,MACEzC,EAAKc,UAAS,iBAAO,CACnBS,kBAAkB,EACnB,GAEL,EAACvB,CAAC,CAsED,OAtEAiB,YAAAuB,EAAA,EAAAtB,IAAA,oBAAAnC,MA/FD,WAAqB,IAADoC,EAAA,KACdoC,EAAc,EAClBH,OAAOI,iBAAiB,UAAU,WAC5BD,EAAcE,SAASC,gBAAgBC,UACzCxC,EAAKL,UAAS,iBAAO,CACnB3B,gBAAiB,OAClB,IAEDgC,EAAKL,UAAS,iBAAO,CACnB3B,gBAAiB,KAClB,IAEHoE,EAAcE,SAASC,gBAAgBC,SACzC,IAKA,IAHA,IAAI5F,EAAQqD,KAAKV,MAAM3C,MACrB6F,EAAW,GAEJC,EAAI,EAAGA,EAAI,GAAIA,IACtBD,EAASN,KAAK,2EAADzF,OACgEgG,IAI/EC,QAAQC,IACNH,EAASlF,KAAI,SAACsF,GAAO,OACnBC,MAAMD,GACHE,MAAK,SAACC,GACL,OAAOA,EAASC,MAClB,IACCF,MAAK,SAACG,GACLtG,EAAQA,EAAMF,OAAOwG,EAASC,QAChC,IACCJ,MAAK,WACJ/C,EAAKL,UAAS,iBAAO,CACnB/C,QACA2E,cAAe3E,EACf4E,UAAU,EACX,GACH,GAAE,KAEN4B,OAAM,SAACC,GACPrD,EAAKL,UAAS,iBAAO,CACnB8B,MAAO4B,EACR,GACH,GACF,GAAC,CAAAtD,IAAA,SAAAnC,MAmDD,WAAU,IAADsC,EAAA,KACPI,EASIL,KAAKV,MARPa,EAAgBE,EAAhBF,iBACAoB,EAAQlB,EAARkB,SACA5D,EAAK0C,EAAL1C,MACA0D,EAAUhB,EAAVgB,WACA1E,EAAK0D,EAAL1D,MACA8C,EAAUY,EAAVZ,WACA1B,EAAesC,EAAftC,gBACAyD,EAAKnB,EAALmB,MAGI6B,EAAehC,EAAWiC,KAAK,KAC/BzF,EAAc0F,QAAQlC,EAAWS,SAAS,eAE5C0B,EAAOnG,EAAKC,KAAI,SAACmG,GAAI,OACvBnH,cAAA,MAAkBH,UAAU,gBAAeE,SACzCC,cAACoH,IAAO,CAACC,GAAIF,EAAKtC,KAAM/E,QAAS6D,EAAKnC,UAAUzB,SAC7CoH,EAAK1H,QAFD0H,EAAKjG,GAIT,IAGP,OACEtB,eAAC0H,IAAa,CAACC,SAAUC,iBAAuBzH,SAAA,CAC9CC,cAACoB,EAAM,CACLC,MAAOA,EACPC,OAAQoC,KAAKyB,aACb3D,UAAWkC,KAAKlC,UAChBD,YAAaA,EACbE,gBAAiBA,IAEnB7B,eAAA,QACEC,UAAU,OACVI,MAAOsB,EAAc,CAAET,OAAQ,aAAgB,KAAKf,SAAA,CAEpDH,eAAC6H,IAAM,CAAA1H,SAAA,CACJmF,GAASlF,cAAC0H,IAAK,CAACC,UAAW/C,IAC5B5E,cAAC0H,IAAK,CACJ7C,KAAM,CAAC,aAAc,KACrB+C,OAAQ,SAACtH,GAAK,OACZN,cAACI,EAAQ,CACPC,MAAOA,EACPX,YAAaiE,EAAK8B,cAClBnF,MAAOA,GACP,QAIN2E,GAAYjF,cAAA,KAAGH,UAAU,sBAE7BG,cAACiC,EAAW,CACV4B,iBAAkBA,EAClBV,WAAYA,EACZW,aAAcJ,KAAK+B,cACnBlE,YAAaA,IAEfvB,cAAA,OAAKH,UAAS,GAAAM,OAAK4G,GAAehH,SAChCC,cAAA,MAAIH,UAAU,UAASE,SAAEmH,MAE1B3F,GACCvB,cAAA,OACEH,UAAU,aACVC,QAAS,kBAAM6D,EAAKP,SAAS,CAAE2B,WAAY,CAAC,QAAS,MAK/D,KAACD,CAAA,CAlLM,CAASH,aAqLHG,IChMf+C,IAASD,OACP5H,cAAC8H,IAAMC,WAAU,CAAAhI,SACfC,cAAC8E,EAAG,MAENiB,SAASiC,eAAe,Q","file":"static/js/main.e5244209.chunk.js","sourcesContent":["const GameMiniature = ({img, name, showOptions, game}) => {\r\n    return (\r\n        <div className='game' onClick={() => showOptions(game)}>\r\n            <div className='game__img' style={{backgroundImage: `url(${img})`}}></div>\r\n            <p className='game__title'>{name}</p>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default GameMiniature;","import GameMiniature from '../components/GameMiniature';\r\n\r\nconst Category = ({games, showOptions, props}) => {\r\n    games.sort((a, b) => {\r\n        if (a.name < b.name) return -1;\r\n        if (a.name > b.name) return 1;\r\n        return 0\r\n    })\r\n\r\n    let classifyGames = games\r\n    const category = props.match.params.category\r\n\r\n    if (category) classifyGames = games.filter(game => game[category])\r\n\r\n    const list = classifyGames.map(game => <GameMiniature key={game.id} img={game.background_image} name={game.name} showOptions={showOptions} game={game}/>)\r\n\r\n    return (\r\n        <>\r\n        {list}\r\n        </>\r\n    );\r\n}\r\n \r\nexport default Category;","import '../styles/TopBar.scss';\r\n\r\nconst TopBar = ({value, search, isNavActive, handleNav, scrollDirection}) => {\r\n    let invisible = ''\r\n    if (scrollDirection === 'down') invisible = 'invisible';\r\n    else if (scrollDirection === 'up') invisible = '';\r\n\r\n\r\n    return (\r\n        <div className={`bar ${invisible}`} style={isNavActive ? {filter: 'blur(3px)'} : null}>\r\n            <input type=\"text\" value={value} onChange={search} className='bar__search' placeholder='Search...'/>\r\n            <div className='bar__loupe'><i className=\"fas fa-search\"></i></div>\r\n            <button onClick={handleNav} className='bar__btn'><i className=\"fas fa-bars\"></i></button>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default TopBar;","import React, { Component } from 'react';\r\nimport '../styles/GameOptions.scss';\r\n\r\n\r\nconst buttons = [\r\n    {type: 'favourite', activeClass: 'fas fa-heart active-i', unActiveClass: 'fas fa-heart'},\r\n    {type: 'toPlay', activeClass: 'fas fa-gamepad active-i', unActiveClass: 'fas fa-gamepad'},\r\n    {type: 'played', activeClass: 'fas fa-trophy active-i', unActiveClass: 'fas fa-trophy'}\r\n]\r\n\r\n\r\n\r\nclass GameOptions extends Component {\r\n\r\n    state = {\r\n        game: [],\r\n        valueOfMove: 0,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        if (this.state.game !== this.props.actualGame)\r\n        this.setState(() => ({\r\n            game: this.props.actualGame,\r\n            valueOfMove: 0\r\n        }))\r\n    }\r\n   \r\n    handleChangeStatus = (actualGame, type) => {\r\n        actualGame[type] = !actualGame[type]\r\n\r\n        this.setState(() => ({\r\n            game: actualGame\r\n        }))\r\n    }\r\n\r\n    handleMoveImg = (type) => {\r\n        if (type === 'right' && this.state.valueOfMove > -500) {\r\n            this.setState((prevState) => ({\r\n                valueOfMove: prevState.valueOfMove - 100\r\n            }))\r\n        } else if (type === 'left' && this.state.valueOfMove < 0) {\r\n            this.setState((prevState) => ({\r\n                valueOfMove: prevState.valueOfMove + 100\r\n            }))\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {isOptionsVisible, actualGame, isNavActive, closeOptions} = this.props;\r\n        const {game, valueOfMove} = this.state;\r\n\r\n        let imgs = []\r\n\r\n        if (isOptionsVisible) {\r\n            imgs = actualGame.short_screenshots.map(screen => (\r\n            <div \r\n            className='imgs__img' \r\n            style={{backgroundImage: `url(${screen.image})`, transform: `translateX(${valueOfMove}%)`}} \r\n            key={screen.id}>\r\n            </div>\r\n        ))\r\n        }\r\n\r\n        const buttonsList = buttons.map(button => (\r\n        <button key={button.type} onClick={() => this.handleChangeStatus(actualGame, button.type)}><i className={game[button.type] ? button.activeClass : button.unActiveClass}></i></button>\r\n        ))\r\n\r\n    return (\r\n        <div className={isOptionsVisible ? 'options active-options' : 'options'} style={isNavActive ? {filter: 'blur(3px)'} : null}>\r\n            <div className='imgs'>\r\n                <button className='imgs__move-right' onClick={() => this.handleMoveImg('right')}><i className=\"fas fa-chevron-right\"></i></button>\r\n                <button className='imgs__move-left' onClick={() => this.handleMoveImg('left')}><i className=\"fas fa-chevron-left\"></i></button>\r\n                {imgs}\r\n            </div>\r\n            <main className='options__menu'>\r\n                <h1 className='options__title'>{actualGame.name}</h1>\r\n                <div className={isOptionsVisible ? 'options__buttons-container active-buttons-container' : 'options__buttons-container'}>\r\n                    {buttonsList}\r\n                </div>\r\n                <ul className={isOptionsVisible ? 'options__info active-info' : 'options__info'}>\r\n                    <li className='options__info-describe'><span className='options__info-span'>Released</span> {actualGame.released}</li>\r\n                    <li className='options__info-describe'><span className='options__info-span'>Rating</span> {actualGame.rating}/5.00</li>\r\n                    <li className='options__info-describe'><span className='options__info-span'>Playtime</span>{actualGame.playtime}h</li>\r\n                    <li className='options__info-describe'><span className='options__info-span'>Metacritic</span>{actualGame.metacritic ? `${actualGame.metacritic}/100` : '-'}</li>\r\n                </ul>\r\n            </main>\r\n            <button className='options__off-button' onClick={() => closeOptions()}><i className=\"fas fa-times\"></i></button>\r\n        </div>\r\n    )\r\n    }\r\n}\r\n \r\nexport default GameOptions;","const ErrorPage = () => {\r\n    return (\r\n        <p className='error'>Error data can not be load :(</p>\r\n    )\r\n}\r\n\r\nexport default ErrorPage;","import React, { Component } from \"react\";\nimport { Route, NavLink, BrowserRouter, Switch } from \"react-router-dom\";\nimport \"../styles/App.scss\";\nimport Category from \"../pages/Category\";\nimport TopBar from \"./TopBar\";\nimport GameOptions from \"./GameOptions\";\nimport ErrorPage from \"../pages/ErrorPage\";\n\nconst list = [\n  { id: 0, name: \"games\", path: \"/\" },\n  { id: 1, name: \"favourite\", path: \"/favourite\" },\n  { id: 2, name: \"to play\", path: \"/toPlay\" },\n  { id: 3, name: \"played\", path: \"/played\" },\n];\n\nclass App extends Component {\n  state = {\n    value: \"\",\n    scrollDirection: \"up\",\n    classesNav: [\"nav\"],\n    games: [],\n    searchedGames: [],\n    actualGame: [],\n    isOptionsVisible: false,\n    isLoaded: false,\n    error: null,\n  };\n\n  componentDidMount() {\n    let startScroll = 0;\n    window.addEventListener(\"scroll\", () => {\n      if (startScroll < document.documentElement.scrollTop) {\n        this.setState(() => ({\n          scrollDirection: \"down\",\n        }));\n      } else {\n        this.setState(() => ({\n          scrollDirection: \"up\",\n        }));\n      }\n      startScroll = document.documentElement.scrollTop;\n    });\n\n    let games = this.state.games,\n      promises = [];\n\n    for (let i = 1; i < 26; i++) {\n      promises.push(\n        `https://api.rawg.io/api/games?key=54f96a8220994e7c91a83f302d022fa0&page=${i}`\n      );\n    }\n\n    Promise.all(\n      promises.map((promise) =>\n        fetch(promise)\n          .then((response) => {\n            return response.json();\n          })\n          .then((jsonData) => {\n            games = games.concat(jsonData.results);\n          })\n          .then(() => {\n            this.setState(() => ({\n              games,\n              searchedGames: games,\n              isLoaded: true,\n            }));\n          })\n      )\n    ).catch((err) => {\n      this.setState(() => ({\n        error: err,\n      }));\n    });\n  }\n\n  handleSearch = (e) => {\n    const searchValue = e.target.value;\n\n    const searchedGames = this.state.searchedGames.filter((game) =>\n      game.name.toUpperCase().includes(searchValue.toUpperCase())\n    );\n\n    this.setState(() => ({\n      value: searchValue,\n      games: searchedGames,\n    }));\n  };\n\n  handleOptions = (game) => {\n    if (game) {\n      this.setState(() => ({\n        isOptionsVisible: true,\n        actualGame: game,\n      }));\n    } else {\n      this.setState(() => ({\n        isOptionsVisible: false,\n        actualGame: [],\n      }));\n    }\n  };\n\n  handleNav = () => {\n    if (window.innerWidth < 1025) {\n      const classesNav = this.state.classesNav;\n\n      if (!classesNav.includes(\"active-nav\")) {\n        classesNav.push(\"active-nav\");\n        this.setState(() => ({\n          classesNav,\n        }));\n      } else {\n        this.setState(() => ({\n          classesNav: [\"nav\"],\n          isOptionsVisible: false,\n        }));\n      }\n    } else {\n      this.setState(() => ({\n        isOptionsVisible: false,\n      }));\n    }\n  };\n\n  render() {\n    const {\n      isOptionsVisible,\n      isLoaded,\n      value,\n      classesNav,\n      games,\n      actualGame,\n      scrollDirection,\n      error,\n    } = this.state;\n\n    const classNameNav = classesNav.join(\" \");\n    const isNavActive = Boolean(classesNav.includes(\"active-nav\"));\n\n    let menu = list.map((item) => (\n      <li key={item.id} className=\"nav__category\">\n        <NavLink to={item.path} onClick={this.handleNav}>\n          {item.name}\n        </NavLink>\n      </li>\n    ));\n\n    return (\n      <BrowserRouter basename={process.env.PUBLIC_URL}>\n        <TopBar\n          value={value}\n          search={this.handleSearch}\n          handleNav={this.handleNav}\n          isNavActive={isNavActive}\n          scrollDirection={scrollDirection}\n        />\n        <main\n          className=\"main\"\n          style={isNavActive ? { filter: \"blur(3px)\" } : null}\n        >\n          <Switch>\n            {error && <Route component={ErrorPage} />}\n            <Route\n              path={[\"/:category\", \"/\"]}\n              render={(props) => (\n                <Category\n                  games={games}\n                  showOptions={this.handleOptions}\n                  props={props}\n                />\n              )}\n            />\n          </Switch>\n          {!isLoaded && <i className=\"fas fa-spinner\"></i>}\n        </main>\n        <GameOptions\n          isOptionsVisible={isOptionsVisible}\n          actualGame={actualGame}\n          closeOptions={this.handleOptions}\n          isNavActive={isNavActive}\n        />\n        <nav className={`${classNameNav}`}>\n          <ul className=\"nav__ul\">{menu}</ul>\n        </nav>\n        {isNavActive && (\n          <div\n            className=\"to-disable\"\n            onClick={() => this.setState({ classesNav: [\"nav\"] })}\n          ></div>\n        )}\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}